
name: UDA-WEB CI/CD

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ prod ]
    # paths-ignore:
    # - "migrations/**"


jobs:
  build:

    runs-on: ubuntu-latest
    name: build

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt


    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # - name: Collectstatic, makemigrations & migrate
    #   run: |

    #     # cd ~/actions-runner/deploy/uda-party-website/uda-party-website        
    #     # python manage.py collectstatic
    #     # python manage.py makemigrations grassroot
    #     python manage.py makemigrations candidate
    #     python manage.py makemigrations home
    #     python manage.py makemigrations search
    #     # python manage.py makemigrations core
    #     python manage.py makemigrations

    #     python manage.py migrate

    # - name: Run Tests
    #   run: |
    #     python manage.py test candidate  home



  deploy:
    runs-on: self-hosted
    needs: build
    name: deploy


    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Dependencies
      run: |
        pwd
        cd ~/actions-runner/deploy/uda-party-website/uda-party-website
       
        python -m pip install --upgrade pip    
        python -m pip install tree
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create ENV VAR
      run: |  
        touch ~/.env
        cp ~/.env  ~/actions-runner/deploy/uda-party-website/uda-party-website


    - name: Create Migrations Backup Directories
      run: |  
        mkdir -p ~/uda-party-website/uda-party-website/migrations/candidate/migrations
        mkdir -p ~/uda-party-website/uda-party-website/migrations/home/migrations
        # mkdir -p ~/uda-party-website/uda-party-website/migrations/search/migrations
        # mkdir -p ~/uda-party-website/uda-party-website/migrations/grassroot/migrations


        cd ~/uda-party-website/uda-party-website/migrations
        tree


    - name: RSYNC Backup Migrations To Workin Directory
      run: |
        rsync -a --delete ~/uda-party-website/uda-party-website/migrations/candidate/migrations ~/actions-runner/deploy/uda-party-website/uda-party-website/candidate
        rsync -a --delete ~/uda-party-website/uda-party-website/migrations/home/migrations ~/actions-runner/deploy/uda-party-website/uda-party-website/home
        # rsync -a --delete ~/uda-party-website/uda-party-website/migrations/search/migrations ~/actions-runner/deploy/uda-party-website/uda-party-website/search
        # rsync -a --delete ~/uda-party-website/uda-party-website/migrations/grassroot/migrations ~/actions-runner/deploy/uda-party-website/uda-party-website/grassroot


        
    # - name: COLLECTSTATIC
    #   run: |
    #     cd ~/actions-runner/deploy/uda-party-website/uda-party-website                
    #     python manage.py collectstatic

    - name: MAKEMIGRATIONS
      run: |
        cd ~/actions-runner/deploy/uda-party-website/uda-party-website  

        # python manage.py makemigrations grassroot
        python manage.py makemigrations candidate
        python manage.py makemigrations home
        # python manage.py makemigrations search


    ## candidate
    - name: MIGRATE-candidate
      run: |
        cd ~/actions-runner/deploy/uda-party-website/uda-party-website        
        python manage.py migrate candidate

    - name: Rsync Workin Directory to Backup Migrations-candidate
      run: |
        rsync -a --delete ~/actions-runner/deploy/uda-party-website/uda-party-website/candidate/migrations ~/uda-party-website/uda-party-website/migrations/candidate
        cd ~/uda-party-website/uda-party-website/migrations/candidate
        tree

    ## home
    - name: MIGRATE-home
      run: |
        cd ~/actions-runner/deploy/uda-party-website/uda-party-website        
        python manage.py migrate home

    - name: Rsync Workin Directory to Backup Migrations-home
      run: |
        rsync -a --delete ~/actions-runner/deploy/uda-party-website/uda-party-website/home/migrations ~/uda-party-website/uda-party-website/migrations/home
        cd ~/uda-party-website/uda-party-website/migrations/home
        tree
    ## search    
    # - name: MIGRATE-search
    #   run: |
    #     cd ~/actions-runner/deploy/uda-party-website/uda-party-website        
    #     python manage.py migrate search

    # - name: Rsync Workin Directory to Backup Migrations-search
    #   run: |
    #     rsync -a --delete ~/actions-runner/deploy/uda-party-website/uda-party-website/search/migrations ~/uda-party-website/uda-party-website/migrations/search
    #     cd ~/uda-party-website/uda-party-website/migrations/search
    #     tree

    # # grassroot
    # - name: MIGRATE-grassroot
    #   run: |
    #     cd ~/actions-runner/deploy/uda-party-website/uda-party-website        
    #     python manage.py migrate grassroot

    # - name: Rsync Workin Directory to Backup Migrations-grassroot
    #   run: |
    #     rsync -a --delete ~/actions-runner/deploy/uda-party-website/uda-party-website/grassroot/migrations ~/uda-party-website/uda-party-website/migrations/grassroot
    #     cd ~/uda-party-website/uda-party-website/migrations/grassroot
    #     tree    

    
    - name: Backup Migrations_Updated
      run: |
        cd ~/uda-party-website/uda-party-website/migrations
        tree

        
    - name: COLLECTSTATIC
      run: |
        cd ~/actions-runner/deploy/uda-party-website/uda-party-website                
        python manage.py collectstatic



    # - name: Test Redis
    #   run: |
    #     redis-cli ping


    # - name: Run Tests
    #   run: |
    #     python manage.py test


    # - name: Reload
    #   run: |
    #     sudo shutdown -r now
